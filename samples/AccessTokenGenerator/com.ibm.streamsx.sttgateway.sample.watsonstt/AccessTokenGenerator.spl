namespace com.ibm.streamsx.sttgateway.sample.watsonstt;

use com.ibm.streamsx.sttgateway.watson::IAMAccessTokenGenerator;
use com.ibm.streamsx.sttgateway.watson::IAMAccessToken;
use com.ibm.streamsx.sttgateway.watson::hourMinuteSecondMillisec;

/**
 * This operator demonstrates the usage of the AccessTokenGenerator
 * As soon as the operator is configured with iamTokenURL and apiKey, the operator
 * starts to request a valid access from the authentication service. The access token 
 * is automatically refreshed.
 * To configure this operator a application configuration sttConnection with property 
 * iamTokenURL and apiKey is required.
 * To enter the application configuration execute the following command:
 * streamtool mkappconfig --property "apiKey=your api key" sttConnection
 * or
 * apply the apiKey as submission time parameter
 * 
 * If this sample is provided with a non empty accessToken parameter, the operator 
 * emits this token.
 */
public composite AccessTokenGenerator {
	param
		expression<rstring> $iamTokenURL : getSubmissionTimeValue("iamTokenURL", "https://iam.cloud.ibm.com/identity/token");
		expression<rstring> $apiKey      : getSubmissionTimeValue("apiKey", "");
		expression<rstring> $accessToken : getSubmissionTimeValue("accessToken", "");
	graph
		stream<IAMAccessToken> IAMAccessTokenStream = IAMAccessTokenGenerator() {
			param
				iamTokenURL: $iamTokenURL;
				apiKey:      $apiKey;
				accessToken: $accessToken;
				initDelay: 20.0;
				//guardTime: 1l;
				//expiresInTestValue: 65l;
		}
		
		() as Sink = Custom(IAMAccessTokenStream as I) {
			logic onTuple I: {
				printStringLn(hourMinuteSecondMillisec(getTimestamp()) + ": " + (rstring)I);
				// emulate processing time here
				block(15.0);
			}
		}

	config
		restartable: false;
}
